{
  "_args": [
    [
      {
        "raw": "comments-parser@github:readmeio/node-comments-parser",
        "scope": null,
        "escapedName": "comments-parser",
        "name": "comments-parser",
        "rawSpec": "github:readmeio/node-comments-parser",
        "spec": "github:readmeio/node-comments-parser",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:readmeio/node-comments-parser.git",
          "sshUrl": "git+ssh://git@github.com/readmeio/node-comments-parser.git",
          "httpsUrl": "git+https://github.com/readmeio/node-comments-parser.git",
          "gitUrl": "git://github.com/readmeio/node-comments-parser.git",
          "shortcut": "github:readmeio/node-comments-parser",
          "directUrl": "https://raw.githubusercontent.com/readmeio/node-comments-parser/master/package.json"
        }
      },
      "/Users/iVic/Desktop/Projets/API_REST_Ratrappage/aizpur_v/node_modules/build-docs"
    ]
  ],
  "_from": "readmeio/node-comments-parser",
  "_id": "comments-parser@1.0.0",
  "_inCache": true,
  "_location": "/comments-parser",
  "_phantomChildren": {},
  "_requested": {
    "raw": "comments-parser@github:readmeio/node-comments-parser",
    "scope": null,
    "escapedName": "comments-parser",
    "name": "comments-parser",
    "rawSpec": "github:readmeio/node-comments-parser",
    "spec": "github:readmeio/node-comments-parser",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:readmeio/node-comments-parser.git",
      "sshUrl": "git+ssh://git@github.com/readmeio/node-comments-parser.git",
      "httpsUrl": "git+https://github.com/readmeio/node-comments-parser.git",
      "gitUrl": "git://github.com/readmeio/node-comments-parser.git",
      "shortcut": "github:readmeio/node-comments-parser",
      "directUrl": "https://raw.githubusercontent.com/readmeio/node-comments-parser/master/package.json"
    }
  },
  "_requiredBy": [
    "/build-docs"
  ],
  "_resolved": "git://github.com/readmeio/node-comments-parser.git#1ea996db8ce36edc6e42bca7f6915a70cfa338b3",
  "_shasum": "f6288b8c86f2e985b138facbc4345e8a3f0491fb",
  "_shrinkwrap": null,
  "_spec": "comments-parser@github:readmeio/node-comments-parser",
  "_where": "/Users/iVic/Desktop/Projets/API_REST_Ratrappage/aizpur_v/node_modules/build-docs",
  "author": {
    "name": "Alexey Prokhorov"
  },
  "bugs": {
    "url": "https://github.com/megahertz/node-comments-parser/issues"
  },
  "dependencies": {
    "esprima": "4.0"
  },
  "description": "This scripts extracts comments from JavaScript code",
  "devDependencies": {
    "jscs": "^2.11.0",
    "jshint": "^2.9.1",
    "jshint-reporter-jscs": "^0.1.0",
    "mocha": "^2.4.5",
    "rewire": "^2.5.1",
    "should": "^8.2.2"
  },
  "gitHead": "1ea996db8ce36edc6e42bca7f6915a70cfa338b3",
  "homepage": "https://github.com/megahertz/node-comments-parser#readme",
  "keywords": [
    "comments",
    "javascript",
    "js",
    "jsdoc",
    "extract",
    "tags"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "comments-parser",
  "optionalDependencies": {},
  "readme": "# node-comments-parser\n\n## Description\n\nThis scripts extracts comments from JavaScript code. It's built on \n[esprima](https://github.com/jquery/esprima).\n\n## Example\n\nTransform the following example.js: \n\n```javascript\n'use strict';\n\n/**\n * Class description\n * @class Test\n * @constructor\n */\nfunction Test() {\n  \n}\n\nTest.prototype = {\n  /**\n   * \n   * @param {string} text\n   */\n  log: function(text) {\n    console.log(text);\n  }\n};\n\nmodule.exports = Test;\n```\n\nto Object:\n\n```javascript\n[\n  {\n\tstart: 3,\n\tend: 7,\n\tjsDoc: true,\n\tlines: [ 'Class description' ],\n\ttags: [\n\t  { name: 'class',       value: 'Test' },\n\t  { name: 'constructor', value: true   }\n\t]\n  },\n  {\n\tstart: 13,\n\tend: 16,\n\tjsDoc: true,\n\tlines: [],\n\ttags: [\n\t  { name: 'param', value: '{string} text' }\n\t]\n  }\n]\n```\n\n## Installation\n\nInstall with [npm](https://npmjs.org/package/comments-parser):\n\n`npm install comments-parser`\n\n## Usage\n\n```javascript\nvar fs     = require('fs');\nvar parser = require('comments-parser');\n\nvar source = fs.readFileSync(__dirname + '/example.js', 'utf-8');\nvar comments = parser(source);\n\n// Test parsed data\nexpect(comments[0].lines).to.equal([ 'Class description' ]);\n```\n\n## Options\n\nparser(options:Object):\n\n Name           | Default | Description \n----------------|---------|-----------------------------------------------------------\n addEsprimaInfo | false   | Add esprima parser data to a comment\n parseJsDocTags | true    | If false jsdoc tags processed as text\n hideJsDocTags  | true    | If parseJsDocTags is true remove tags from lines property\n trim           | true    | Trim lines, values: true, false, 'right'\n\n## License\n\nLicensed under MIT.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/megahertz/node-comments-parser.git"
  },
  "scripts": {
    "jscs": "jscs .",
    "jshint": "jshint --exclude ./node_modules .",
    "mocha": "mocha ./test",
    "test": "npm run jshint && npm run jscs && npm run mocha"
  },
  "version": "1.0.0"
}
